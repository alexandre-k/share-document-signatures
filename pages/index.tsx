import { useState } from 'react'
import { Loading, Grid } from "@nextui-org/react";
import type { NextPage } from 'next'
import { Button } from '@nextui-org/react';
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { registerUser } from '../services/register';
import { authenticate } from '../services/login';
/**
 * It is strongly advised that authenticators get their own DB
 * table, ideally with a foreign key to a specific UserModel.
 *
 * "SQL" tags below are suggestions for column data types and
 * how best to store data received during registration for use
 * in subsequent authentications.
 */
type Authenticator = {
    // SQL: Encode to base64url then store as `TEXT`. Index this column
    credentialID: Buffer;
    // SQL: Store raw bytes as `BYTEA`/`BLOB`/etc...
    credentialPublicKey: Buffer;
    // SQL: Consider `BIGINT` since some authenticators return atomic timestamps as counters
    counter: number;
    // SQL: `VARCHAR(255)` and store string array as a CSV string
    // ['usb' | 'ble' | 'nfc' | 'internal']
    transports?: AuthenticatorTransport[];
};

export const getServerSideProps = async () => {
    // const res = await fetch("http://localhost:3000/api/signatureRequest");

    // (Pseudocode) Retrieve any of the user's previously-
    // registered authenticators
    // const userAuthenticators: Authenticator[] = getUserAuthenticators(user);

    // const data = await res.json();
    const data = [{
        filesUrl: [""],
        signingUrl: "",
        detailsUrl: ""
    }]
    return { props: { data }}
}

type Signature = {
    filesUrl: string;
    signingUrl: string;
    detailsUrl: string;
}
interface HomeProps {
    data: Array<Signature>
}

const Home: NextPage = (homeProps: HomeProps) => {
    console.log(homeProps)
    const [isRegistering, setIsRegistering] = useState<boolean>(false);
    const [isAuthenticating, setIsAuthenticating] = useState<boolean>(false);

  return (
      <>
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div className={styles.grid}>
            <div>
                <h2>Signature</h2>
                <a href={homeProps.data[0].filesUrl}>
                    {homeProps.data[0].filesUrl}
                </a>
            </div>
        </div>

        <div className={styles.grid}>
            <div>
                <h2>Register</h2>
                <Button shadow disabled={isRegistering || isAuthenticating} onPress={async () => {
                    try {
                        setIsRegistering(true)
                        await registerUser()
                        setIsRegistering(false)
                    } catch {
                        setIsRegistering(false)
                    }}}>
                    {isRegistering ? <Loading type="points" color="currentColor" size="sm" />:"register"}
                </Button>
            </div>
        </div>

        <div className={styles.grid}>
            <div>
                <h2>Login</h2>
                <Button
                    shadow
                    disabled={isRegistering || isAuthenticating}
                    onPress={() =>{
                        try {
                            setIsAuthenticating(true)
                            authenticate()
                        }
                        catch {
                            setIsAuthenticating(false);
                        }
                    }}>
                    {isAuthenticating ? <Loading type="points" color="currentColor" size="sm" />:"Login"}
                </Button>
            </div>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
      </>
  )
}

export default Home
